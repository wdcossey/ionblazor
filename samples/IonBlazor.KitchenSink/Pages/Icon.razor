@page "/icon"

<PlaygroundContainer>
    <Header>
        <h2>Basic Usage</h2>
    </Header>
    <ChildContent>
        <IonIcon Name="logo-ionic"></IonIcon>
        <IonIcon Name="logo-ionic" Size="@IonIconSize.Large"></IonIcon>
        <IonIcon Name="logo-ionic" Color="@IonColor.Primary"></IonIcon>
        <IonIcon Name="logo-ionic" Size="@IonIconSize.Large" color="@IonColor.Primary"></IonIcon>
        <IonIcon src="/img/blazor.svg" Size="@IonIconSize.Large"></IonIcon>
        <IonIcon Name="@_iconName" Size="@IonIconSize.Large" Color="@_iconColor"></IonIcon>
    </ChildContent>
</PlaygroundContainer>

@code {
    private string _iconName = "cloud-outline";
    private string _iconColor = IonColor.Primary;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            await Task.Delay(3000);
            _iconName = "cloud-offline-outline";
            _iconColor = IonColor.Danger;
            await InvokeAsync(StateHasChanged);
        }
    }
}