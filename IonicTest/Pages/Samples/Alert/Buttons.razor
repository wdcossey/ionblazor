<IonButton id="present-alert-buttons">Click Me</IonButton>
<IonAlert @ref="_alert" 
          Trigger="present-alert-buttons"
          Header="Alert!"
          Buttons="@(() => { return new[] 
                   {
                       new AlertButton() { Text = "Cancel", Role = "cancel" },
                       new AlertButton() { Text = "OK", Role = "confirm" },
                   }; })"
          IonAlertDidDismiss="IonAlertDidDismiss"
          ButtonHandler="ButtonHandler"/>
<p>@((MarkupString)_handlerOutput)</p>
<p>@((MarkupString)_roleOutput)</p>

@code{
    private IonAlert _alert = null!;
    private string _roleOutput = null!;
    private string _handlerOutput = null!;

    private void IonAlertDidDismiss(IonAlertIonAlertDidDismissEventArgs args)
    {
        _roleOutput = $"Dismissed with role: <b>{args.Role}</b>";
    }

    private void ButtonHandler(AlertButtonHandlerEventArgs args)
    {
        switch (args.Button?.Role)
        {
            case null:
                break;
            case "cancel":
                _handlerOutput = "Alert <b>canceled</b>";
                break;
            case "confirm":
                _handlerOutput = "Alert <b>confirmed</b>";
                break;
                
        }
    }

}