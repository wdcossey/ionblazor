<IonButton id="open-dismissing-toast">Open Toast</IonButton>
<IonToast Trigger="open-dismissing-toast" Duration="3000" Message="Hello World!" ButtonsBuilder="@ButtonsBuilder" IonToastDidDismiss="@IonToastDidDismiss"></IonToast>
<p>@((MarkupString)_handlerOutput)</p>
<p>@((MarkupString)_roleOutput)</p>

@code {

    private string _handlerOutput = null!;
    private string _roleOutput = null!;

    private void ButtonsBuilder(ToastButtonBuilder builder)
    {
        builder
            .Add(new IonToastButton
            {
                Text = "More Info",
                Role = "info",
                Handler = _ =>
                {
                    _handlerOutput = "More Info clicked";
                    StateHasChanged();
                    return ValueTask.CompletedTask;
                }
            })
            .Add(new IonToastButton
            {
                Text = "Dismiss",
                Role = "cancel",
                Handler = _ =>
                {
                    _handlerOutput = "Dismiss clicked";
                    StateHasChanged();
                    return ValueTask.CompletedTask;
                }
            })
            .Add(new IonToastButton
            {
                Text = "Custom",
                Role = "custom",
                Icon = "star",
                Handler = async args =>
                {
                    _handlerOutput = "Custom clicked";
                    StateHasChanged();
                    await (args.Sender?.DismissAsync() ?? ValueTask.CompletedTask);
                }
            });
    }

    private Task IonToastDidDismiss(IonToastDismissEventArgs args)
    {
        _roleOutput = $"Dismissed with role: {args.Role}";
        return Task.CompletedTask;
    }

}