@using System.Collections
<IonContent>
    <IonList>
        @for (var i = 1; i < ItemCount; i++)
        {
            var index = i;
            <IonItem>
                <IonAvatar slot="start">
                    <img src="https://picsum.photos/80/80?random={@index}" alt="Avatar"/>
                </IonAvatar>
                <IonLabel>Item @index</IonLabel>
            </IonItem>
        }
    </IonList>
    <IonInfiniteScroll IonInfinite="IonInfiniteCallback">
        <IonInfiniteScrollContent LoadingText="Please wait..." LoadingSpinner="bubbles"/>
    </IonInfiniteScroll>
</IonContent>

@code {
    int ItemCount { get; set; } = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GenerateItems();
    }

    private Task IonInfiniteCallback(IonInfiniteEventArgs args)
    {
        //This example does not call `CompleteAsync()`, the spinner will show indefinitely
        return Task.CompletedTask;
    }

    private void GenerateItems() => ItemCount += 50;

}