@page "/samples/segment"

<PlaygroundContainer FillWidth="true">
    <Header>
        <h2>Basic Usage</h2>
        <p>Segments consist of <a href="https://ionicframework.com/docs/api/segment-button">segment buttons</a> with a <code>value</code> property on each button. Set the <code>value</code> property on the segment to match the value of a button to select that button. Segments can also be disabled to prevent users from interacting with them.</p>
    </Header>
    <ChildContent>
        <BasicUsage/>
    </ChildContent>
</PlaygroundContainer>

<PlaygroundContainer FillWidth="true">
    <Header>
        <h2>Scrollable Segments</h2>
        <p>Segments are not scrollable by default. Each segment button has a fixed width, and the width is determined by dividing the number of segment buttons by the screen width. This ensures that each segment button can be displayed on the screen without having to scroll. As a result, some segment buttons with longer labels may get cut off. To avoid this we recommend either using a shorter label or switching to a scrollable segment by setting the <code>scrollable</code> property to <code>true</code>. This will cause the segment to scroll horizontally, but will allow each segment button to have a variable width.</p>
    </Header>
    <ChildContent>
        <ScrollableSegments/>
    </ChildContent>
</PlaygroundContainer>

<PlaygroundContainer>
    <Header>
        <h2>Segments in Toolbars</h2>
    </Header>
    <ChildContent>
        <DevicePreview>
            <SegmentsInToolbars/>
        </DevicePreview>
    </ChildContent>
</PlaygroundContainer>

<PlaygroundContainer FillWidth="true">
    <Header>
        <h2>Swipeable Segments</h2>
        <p>Each <a href="https://ionicframework.com/docs/api/segment-button">segment button</a> can be associated with a <a href="https://ionicframework.com/docs/api/segment-content">segment content</a> element that will be displayed
            when the segment is active. With this approach, each segment's content can be swiped or scrolled between and the segment will be updated
            to reflect the currently visible content.</p>
    </Header>
    <ChildContent>
        <SwipeableSegments/>
    </ChildContent>
</PlaygroundContainer>

<PlaygroundContainer>
    <Header>
        <h2>Theming</h2>
        <h3>Colors</h3>
    </Header>
    <ChildContent>
        <ThemingColors/>
    </ChildContent>
</PlaygroundContainer>

<PlaygroundContainer>
    <Header>
        <h3>CSS Custom Properties</h3>
    </Header>
    <ChildContent>
        <ThemingCssCustomProperties/>
    </ChildContent>
</PlaygroundContainer>