<IonList>
    <IonItem>
        <IonSelectOf TItem="@Food" CompareWith="CompareWith" Multiple="@true" ItemsSource="@_foods" aria-label="Food" Placeholder="Select food" IonChange="OnIonChange">
            <ItemTemplate>
                <IonSelectOptionOf Value="@context.Key">@context.Value.Name</IonSelectOptionOf>
            </ItemTemplate>
        </IonSelectOf>
    </IonItem>
</IonList>


@code {

    [CascadingParameter(Name = nameof(Console))]
    private PlaygroundConsole? Console { get; init; }

    private record Food
    {
        public int Id { get; set; }
        public string Name { get; set; } = null!;
        public string Type { get; set; } = null!;
    }

    private readonly List<Food> _foods =
    [
        new() { Id = 7, Name = "Apples", Type = "fruit" },
        new() { Id = 8, Name = "Carrots", Type = "vegetable" },
        new() { Id = 9, Name = "Cupcakes", Type = "dessert" }
    ];

    private void OnIonChange(IonSelectChangeEventArgs<Food> args)
    {
        Console?.Add($"IonSelectOf::IonChange fired with value: {args.Value}");
    }

    private void CompareWith(IonSelectCompareEventArgs<Food> args)
    {
        args.Compare = (indexes, item) =>
        {
            Console?.Add($"IonSelectOf::Comparing:: Index:{item.Key} with {item.Value}");
            var result = indexes.Contains(item.Key);
            return result;
        };
    }
}