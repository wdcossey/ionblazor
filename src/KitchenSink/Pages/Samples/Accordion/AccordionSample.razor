@page "/samples/accordion"

<h2>Basic Usage</h2>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup>
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        First Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Second Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Third Content
                    </div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h2>Toggle Accordions</h2>
<p>Which accordion is open is controlled by setting the <code>value</code> property on <code>ion-accordion-group</code>. Setting this property allows developers to programmatically expand or collapse certain accordions.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup @ref="_toggleAccordionGroup">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>

            <IonButton @onclick="@ToggleAccordionAsync">Toggle Second Accordion</IonButton>

        </div>
    </div>
</div>

<h2>Listen for Accordion State Changes</h2>
<p>Developers can listen for the <code>ionChange</code> event to be notified when accordions expand or collapse.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup IonChange="AccordionOnChangeCallback">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>

            <p class="listener-out" style="white-space: pre-line">@((MarkupString)_listenerOutContent)</p>
        </div>
    </div>
</div>

<h2>Multiple Accordions</h2>
<p>Developers can allow multiple accordions to be open at once with the <code>multiple</code> property.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup Multiple="true" Value="@(new []{"first", "third"})">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h2>Disabling Accordions</h2>
<h3>Individual Accordion</h3>
<p>Individual accordions can be disabled with the <code>disabled</code> property on <code>ion-accordion</code>.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup>
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second" Disabled="@true">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion (Disabled)</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h3>Accordion Group</h3>
<p>The accordion group can be disabled with the <code>disabled</code> property on <code>ion-accordion-group</code>.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup Disabled="@true">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h2>Readonly Accordions</h2>
<h3>Individual Accordion</h3>
<p>Individual accordions can be disabled with the <code>readonly</code> property on <code>ion-accordion</code>.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup>
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        First Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="second" Readonly="@true">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion (Readonly)</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Second Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Third Content
                    </div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h3>Accordion Group</h3>
<p>The accordion group can be disabled with the <code>readonly</code> property on <code>ion-accordion-group</code>.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup Readonly="@true">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        First Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Second Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Third Content
                    </div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h2>Customization</h2>
<h3>Expansion Styles</h3>
<p>There are two built in expansion styles: <code>compact</code> and <code>inset</code>. This expansion style is set via the <code>expand</code> property on <code>ion-accordion-group</code>.</p>
<p>When <code>expand="inset"</code>, the accordion group is given a border radius. On <code>md</code> mode, the entire accordion will shift down when it is opened.</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup Expand="AccordionExpand.Inset">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        First Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Second Content
                    </div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">
                        Third Content
                    </div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h3>Advanced Expansion Styles</h3>
<p>You can customize the expansion behavior by styling based on the accordion's state. There are four state classes applied to <code>ion-accordion</code>. Styling using these classes can allow you to create advanced state transitions:</p>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <AdvancedAccordionExpansionStyles/>
        </div>
    </div>
</div>

<h3>Icons</h3>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup>
                <IonAccordion Value="first" ToggleIcon="caret-down-circle" ToggleIconSlot="start">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second" ToggleIcon="caret-down-circle" ToggleIconSlot="start">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third" ToggleIcon="caret-down-circle" ToggleIconSlot="start">
                    <IonItem slot="header" Color="@IonColor.Light">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>

<h3>Theming</h3>
<div class="playground__container">
    <div class="playground__preview">
        <div class="playground__frame">
            <IonAccordionGroup Class="accordion-theming" Expand="AccordionExpand.Inset">
                <IonAccordion Value="first">
                    <IonItem slot="header" Color="rose">
                        <IonLabel>First Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">First Content</div>
                </IonAccordion>
                <IonAccordion Value="second">
                    <IonItem slot="header" Color="rose">
                        <IonLabel>Second Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Second Content</div>
                </IonAccordion>
                <IonAccordion Value="third">
                    <IonItem slot="header" Color="rose">
                        <IonLabel>Third Accordion</IonLabel>
                    </IonItem>
                    <div class="ion-padding" slot="content">Third Content</div>
                </IonAccordion>
            </IonAccordionGroup>
        </div>
    </div>
</div>