@page "/samples/modal"

<div class="ion-page" id="main-content">
    <IonContent Class="container">
        <h2>Inline Modals (Recommended)</h2>
        <div class="playground__container">
            <div class="playground__preview">
                <div class="container">
                    <IonHeader>
                        <IonToolbar>
                            <IonTitle>Inline Modal</IonTitle>
                        </IonToolbar>
                    </IonHeader>
                    <IonContent Class="ion-padding">
                        <IonButton id="open-modal" Expand="@IonButtonExpand.Block">Open</IonButton>
                        <p id="message">@_message</p>
                        <IonModal @ref="_inlineModalsRef" Trigger="open-modal" WillDismiss="InlineModalsWillDismiss">
                            <IonHeader>
                                <IonToolbar>
                                    <IonButtons Slot="start">
                                        <IonButton @onclick="@InlineModalsCancelAsync">Cancel</IonButton>
                                    </IonButtons>
                                    <IonTitle>Welcome</IonTitle>
                                    <IonButtons Slot="end">
                                        <IonButton @onclick="@InlineModalsConfirmAsync" Strong="true">Confirm</IonButton>
                                    </IonButtons>
                                </IonToolbar>
                            </IonHeader>
                            <IonContent class="ion-padding">
                                <ion-item>
                                    <IonLabel Position="@IonLabelPosition.Stacked">Enter your name</IonLabel>
                                    <ion-input @bind-value="_inlineModalsInputValue" @bind-value:event="oninput" type="text" placeholder="Your name"></ion-input>
                                </ion-item>
                            </IonContent>
                        </IonModal>
                    </IonContent>
                </div>
            </div>
        </div>
        
        <h3>Using <code>isOpen</code></h3>
        <div class="playground__container">
            <div class="playground__preview">
                <div class="container">
                    <IonHeader>
                        <IonToolbar>
                            <IonTitle>Inline Modal</IonTitle>
                        </IonToolbar>
                    </IonHeader>
                    <IonContent Class="ion-padding">
                        <IonButton Expand="block" @onclick="@(() => _usingIsOpenRef.SetIsOpenAsync(true))">Open</IonButton>
                        <IonModal @ref="_usingIsOpenRef">
                            <IonHeader>
                                <IonToolbar>
                                    <IonTitle>Modal</IonTitle>
                                    <IonButtons Slot="end">
                                        <IonButton @onclick="@(() => _usingIsOpenRef.SetIsOpenAsync(false))">Close</IonButton>
                                    </IonButtons>
                                </IonToolbar>
                            </IonHeader>
                            <IonContent class="ion-padding">
                                <p>
                                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni illum quidem recusandae ducimus quos
                                  reprehenderit. Veniam, molestias quos, dolorum consequuntur nisi deserunt omnis id illo sit cum qui. Eaque,
                                  dicta.
                                </p>
                            </IonContent>
                        </IonModal>
                    </IonContent>
                </div>
            </div>
        </div>
        
        
        <h2>Preventing a Modal from Dismissing</h2>
        <h3>Setting a boolean value</h3>
        <div class="playground__container">
            <div class="playground__preview">
                <div class="container">
                    <div class="ion-page">
                        <IonHeader>
                          <IonToolbar>
                            <IonTitle>App</IonTitle>
                          </IonToolbar>
                        </IonHeader>
                        <IonContent class="ion-padding">
                            <IonButton id="open-modal-2" Expand="block">Open</IonButton>
                            
                            <IonModal CanDismiss="@false" Trigger="open-modal-2" @ref="_modalWithBooleanDismissRef" IonModalWillPresent="@(() => _checkboxDismissRef.Checked = false)">
                                <IonHeader>
                                    <IonToolbar>
                                        <IonTitle>Modal</IonTitle>
                                        <IonButtons Slot="end">
                                            <IonButton @onclick="@(async () => await _modalWithBooleanDismissRef.DismissAsync())">Close</IonButton>
                                        </IonButtons>
                                    </IonToolbar>
                                </IonHeader>
                                <IonContent>
                                  <p class="ion-padding-horizontal">You must accept the terms and conditions to close this modal.</p>
                                    <IonItem>
                                      <IonLabel Class="ion-text-wrap" for="terms">Do you accept the terms and conditions?</IonLabel>
                                      <IonCheckBox @ref="_checkboxDismissRef" id="terms" IonChange="@(args => _modalWithBooleanDismissRef.SetCanDismissAsync(args.Checked is true))"></IonCheckBox>
                                    </IonItem>
                                </IonContent>
                            </IonModal>
                        </IonContent>
                    </div>
                    
                </div>
            </div>
        </div>
        
        
    </IonContent>
</div>