@namespace IonBlazor.Components
@inherits IonSelect<TItem>

@typeparam TItem where TItem: notnull

<ion-select @ref="IonElement"
            @attributes="@Attributes"
            color="@Color"
            mode="@Mode"
            cancel-text="@CancelText"
            compare-with="@CompareWith"
            disabled="@Disabled.AsString()"
            expanded-icon="@ExpandedIcon"
            fill="@Fill"
            interface="@Interface"
            justify="@Justify"
            label="@Label"
            label-placement="@LabelPlacement"
            multiple="@Multiple.AsString()"
            name="@Name"
            ok-text="@OkText"
            placeholder="@Placeholder"
            selected-text="@SelectedText"
            shape="@Shape"
            toggle-icon="@ToggleIcon"
            value="@Value">
    <CascadingValue Value="@(this)" Name="Parent">
        <CascadingValue Value="@Multiple" Name="IsMultiple">
            <CascadingValue Value="@(Multiple is true ? typeof(TItem[]) : typeof(TItem))" Name="@nameof(TItem)">
                @foreach (var item in ItemsSource.Select((val, idx) => KeyValuePair.Create(idx, val)))
                {
                    @ItemTemplate(item)
                }
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</ion-select>